<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
     "
       default-autowire="byName">


    <!-- Activates various annotations to be detected in bean classes -->
    <context:annotation-config/>

    <!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
        For example @Component, @Repository, @Service, and @Controller \-->
    <context:component-scan base-package="net.amoc.domain"/>

    <mvc:resources mapping="/resources/**" location="/resources/"/>


    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="Message"/>
    </bean>


    <!-- ========================= PERSISTENCE DEFINITIONS ========================= -->
    <context:property-placeholder location="/WEB-INF/db.properties"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close"
          p:driverClass="${app.jdbc.driverClassName}"
          p:jdbcUrl="${app.jdbc.url}"
          p:user="${app.jdbc.username}"
          p:password="${app.jdbc.password}"
          p:acquireIncrement="5"
          p:idleConnectionTestPeriod="60"
          p:maxPoolSize="30"
          p:maxStatements="50"
          p:minPoolSize="5"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="net.amoc.domain"/>
        <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"/>
        <property name="namingStrategy">
            <bean class="org.hibernate.cfg.ImprovedNamingStrategy"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.query.substitutions">true=1 false=0</prop>
                <prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
                <prop key="hibernate.jdbc.use_get_generated_keys">false</prop>

                <!--ehcache-->
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml"</prop>
            </props>
        </property>
        <property name="entityInterceptor">
            <bean class="net.amoc.domain.common.PersistentInterceptor"/>
        </property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
        <property name="fetchSize" value="50"/>
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="matchTxMethodNames"
          class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
        <property name="properties">
            <props>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="submit*">PROPAGATION_REQUIRED</prop>
                <prop key="move*">PROPAGATION_REQUIRED</prop>
                <prop key="delete*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="store*">PROPAGATION_REQUIRED</prop>
                <prop key="undelete*">PROPAGATION_REQUIRED</prop>
                <prop key="rollback*">PROPAGATION_REQUIRED</prop>
                <prop key="tempDelete*">PROPAGATION_REQUIRED</prop>
                <prop key="tmpDelete*">PROPAGATION_REQUIRED</prop>
                <prop key="add*">PROPAGATION_REQUIRED</prop>
                <prop key="activate*">PROPAGATION_REQUIRED</prop>
                <prop key="change*">PROPAGATION_REQUIRED</prop>
                <prop key="create*">PROPAGATION_REQUIRED</prop>
                <prop key="sendMessage">PROPAGATION_REQUIRED</prop>
                <prop key="onMessage">PROPAGATION_REQUIRED</prop>
                <prop key="onApplicationEvent">PROPAGATION_REQUIRED</prop>
                <prop key="onActivation">PROPAGATION_REQUIRED</prop>
                <prop key="reassignMedicalContact">PROPAGATION_REQUIRED</prop>
                <prop key="streamImage">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="import*">PROPAGATION_REQUIRED</prop>
                <prop key="replace*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="txInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionAttributeSource">
            <ref local="matchTxMethodNames"/>
        </property>
    </bean>

    <!--<tx:annotation-driven/>-->

    <!-- ************************-->
    <!-- Dao Beans               -->
    <!-- ************************-->
    <!-- ************************-->
    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>

    <!-- ************************-->
    <!-- Service Beans               -->
    <!-- ************************-->

    <!-- ************************************************************************************************************* -->
    <!-- NOTE: All bean names ending with Dao and Service will be wrapped with the transaction AOP.                    -->
    <!-- ************************************************************************************************************* -->

    <bean id="autoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="interceptorNames">
            <list>
                <idref local="txInterceptor"/>
            </list>
        </property>
        <property name="beanNames">
            <list>
                <value>*Dao</value>
                <value>*Service</value>
            </list>
        </property>
    </bean>

    <!-- =================================== Method Result Caching ==============================-->

    <!--Default conf is ehcache.xml in class path -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>


    <bean id="commonDataCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheName" value="commonDataCache"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <bean id="objectDataCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheName" value="objectDataCache"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <bean id="appNotifCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheName" value="appNotifCache"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <bean id="chatCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheName" value="chatCache"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <bean id="loggedInUserCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheName" value="loggedInUserCache"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <bean id="streamImageWithCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheName" value="streamImageCache"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="localhost"/>
    </bean>

    <!-- ===================================================================================-->
    <!-- Web layer authentication filter                                                    -->
    <!-- ===================================================================================-->

    <context:component-scan base-package="net.amoc.dao"/>
</beans>
